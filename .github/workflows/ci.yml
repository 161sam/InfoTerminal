name: ci

on:
  pull_request:
  push:
    branches: [main]

jobs:
  no-binaries:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: fail on binary files
        run: |
          set -euo pipefail
          base="${{ github.event.pull_request.base.sha || 'HEAD~1' }}"
          git fetch --no-tags --depth=100 origin ${{ github.base_ref }} || true
          CHANGED=$(git diff --diff-filter=AM --name-only "$base"...HEAD || true)
          echo "$CHANGED" | sed '/^\s*$/d' > changed.txt
          if [ -s changed.txt ]; then
            while IFS= read -r f; do
              case "$f" in
                *.md|*.mdx|*.txt|*.yml|*.yaml|*.json|*.jsonc|*.js|*.jsx|*.ts|*.tsx|*.mjs|*.cjs|*.py|*.sh|*.bash|*.zsh|*.toml|*.ini|*.cfg|*.conf|*.env|*.example|*.dockerfile|Dockerfile|*.graphql|*.gql|*.sql|*.css|*.scss|*.sass|*.less|*.gitignore|*.gitattributes|*.editorconfig|*.prettier*|*.eslintrc*|*.babel*|*.nvmrc|*.npmrc|*.yarnrc|package*.json|pnpm-lock.yaml|yarn.lock|poetry.lock|requirements*.txt|pyproject.toml)
                  continue ;;
              esac
              if git diff --numstat "$base"...HEAD -- "$f" | awk '{print $1,$2}' | grep -q '^- -$'; then
                echo "Binary detected by numstat: $f"; exit 1
              fi
              if command -v file >/dev/null 2>&1; then
                mime=$(file -b --mime "$f" || true)
                if echo "$mime" | grep -qi 'charset=binary'; then
                  echo "Binary detected by file(1): $f ($mime)"; exit 1
                fi
              fi
              case "$f" in
                *.png|*.jpg|*.jpeg|*.gif|*.bmp|*.ico|*.pdf|*.zip|*.gz|*.tar|*.7z|*.rar|*.mp4|*.mov|*.avi|*.mp3|*.wav|*.ogg|*.woff|*.woff2|*.ttf|*.eot|*.psd|*.ai|*.sketch|*.ppt|*.pptx|*.doc|*.docx|*.xls|*.xlsx)
                  echo "Binary extension blocked: $f"; exit 1 ;;
              esac
            done < changed.txt
          fi
          echo "No binary files detected."

  python:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'
          cache: 'pip'
      - name: Install dependencies
        run: |
          pip install -r services/search-api/requirements.txt || true
          pip install -r services/graph-api/requirements.txt || true
          pip install -r services/graph-views/requirements.txt || true
          pip install -r requirements-dev.txt || true
      - name: Run tests
        run: pytest -q

  frontend:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      - name: Install dependencies
        run: npm -w apps/frontend ci
      - name: Run tests
        run: npm -w apps/frontend test
      - name: Build
        run: npm -w apps/frontend run build
