apiVersion: apps/v1
kind: Deployment
metadata: { name: tempo, namespace: observability }
spec:
  replicas: 1
  selector: { matchLabels: { app: tempo } }
  template:
    metadata: { labels: { app: tempo } }
    spec:
      containers:
        - name: tempo
          image: grafana/tempo:2.5.0
          args: ["-config.expand-env=true","-config.file=/etc/tempo/tempo.yaml"]
          ports: [{ containerPort: 4317 }]
          volumeMounts: [{ name: cfg, mountPath: /etc/tempo }]
      volumes:
        - name: cfg
          configMap:
            name: tempo-config
---
apiVersion: v1
kind: ConfigMap
metadata: { name: tempo-config, namespace: observability }
data:
  tempo.yaml: |
    server:
      http_listen_port: 3200
      log_level: warn
    distributor: { receivers: { otlp: { protocols: { grpc: {} } } } }
    storage:
      trace:
        backend: local
        local: { path: /tmp/tempo }
    querier: {}
    query_frontend: {}
    compactor: {}
---
apiVersion: v1
kind: Service
metadata: { name: tempo, namespace: observability }
spec:
  selector: { app: tempo }
  ports:
    - { name: otlp-grpc, port: 4317, targetPort: 4317 }
    - { name: http, port: 3200, targetPort: 3200 }
