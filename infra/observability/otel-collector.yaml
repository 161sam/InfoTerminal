apiVersion: v1
kind: ConfigMap
metadata:
  name: otel-collector-config
  namespace: default
data:
  otel.yaml: |
    receivers:
      otlp:
        protocols:
          http:
          grpc
      prometheus:
        config:
          scrape_configs:
            - job_name: 'otel-collector'
              static_configs: [{ targets: ['0.0.0.0:8888'] }]  # self metrics
    processors:
      batch: {}
      resourcedetection:
        detectors: [env, k8s]
        timeout: 2s
        override: false
    exporters:
      otlp:
        endpoint: tempo.default.svc:4317
        tls:
          insecure: true
      prometheus:
        endpoint: 0.0.0.0:9464
      logging:
        loglevel: warn
    extensions:
      health_check: {}
      pprof: { endpoint: 0.0.0.0:1777 }
      zpages: { endpoint: 0.0.0.0:55679 }
    service:
      extensions: [health_check, pprof, zpages]
      pipelines:
        traces:
          receivers: [otlp]
          processors: [batch]
          exporters: [otlp]
        metrics:
          receivers: [otlp, prometheus]
          processors: [batch, resourcedetection]
          exporters: [prometheus]

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: otel-collector
  namespace: default
spec:
  replicas: 1
  selector: { matchLabels: { app: otel-collector } }
  template:
    metadata:
      labels: { app: otel-collector }
    spec:
      containers:
        - name: otel-collector
          image: otel/opentelemetry-collector:0.99.0
          args: ["--config=/conf/otel.yaml"]
          ports:
            - { name: otlp-grpc, containerPort: 4317 }
            - { name: otlp-http, containerPort: 4318 }
            - { name: prom, containerPort: 9464 }
            - { name: metrics, containerPort: 8888 }
          volumeMounts:
            - { name: otel-config, mountPath: /conf, readOnly: true }
          readinessProbe: { httpGet: { path: /, port: 13133 }, initialDelaySeconds: 5 }
          livenessProbe:  { httpGet: { path: /, port: 13133 }, initialDelaySeconds: 10 }
      volumes:
        - name: otel-config
          configMap:
            name: otel-collector-config
            items: [{ key: otel.yaml, path: otel.yaml }]
---
apiVersion: v1
kind: Service
metadata:
  name: otel-collector
  namespace: default
spec:
  selector: { app: otel-collector }
  ports:
    - { name: otlp-grpc, port: 4317, targetPort: 4317 }
    - { name: otlp-http, port: 4318, targetPort: 4318 }
    - { name: prom, port: 9464, targetPort: 9464 }
